{"version":3,"sources":["webpack:///js/71.020edddc854ff50868cd.js","webpack:///./src_admin/page/inventoryPlan/redux/mapDispatchToProps.js","webpack:///./src_admin/page/inventoryPlan/redux/action.js","webpack:///./src_admin/page/inventoryPlan/components/FullModal.js","webpack:///delegated ./node_modules/antd/lib/checkbox/index.js from dll-reference bundle_1e684511172d5b2e005f"],"names":["webpackJsonp","1006","module","exports","__webpack_require__","Object","defineProperty","value","mapDispatchToProps","undefined","_extends2","_extends3","obj","__esModule","default","actions","newObj","key","prototype","hasOwnProperty","call","dispatch","bindActionCreators","1069","_interopRequireDefault","handleDetaiList","handleRep","handleExport","handleDetailPlan","handleGetDetailRecord","handleStart","handleConfirmPlan","handleCloseOrder","handleCreateData","handleCreatePlan","handleGetList","update","actionType","_moment2","_moment","object","type","INVENTORYPLAN_UPDATE","data","reqData","status","console","log","tableLoading","reqObjSearchParams","searchParams","i","toString","children","initDate","length","beginDate","format","endDate","getData","api","API_INVENTORYPLAN_GETHEADLIST_PAGE","then","page","size","total","result","selectedRowKeys","selectedRows","searchResult","list","catch","err","INVENTORYPLAN_FILE","API_INVENTORYPLAN_GETCOUNTBYSTATUSSORT_NUM","arr","tabNumObj","tab0","tab1","tab2","tab3","tab4","map","o","j","statusCode","tableActiveKey","CallBack","modalTableLoading","API_INVENTORYPLAN_STOCKDETAILS_TPAGE","modalTotal","modalSearchResult","callBack","API_INVENTORYPLAN_CREATEINVENTORYPLAN_CREATE","API_INVENTORYPLAN_CANSOLEPLAN_CLOSE","API_INVENTORYPLAN_CONFIRMPLAN_DET","API_INVENTORYPLAN_STARTPLAN_START","deliveryTableLoading","API_INVENTORYPLAN_GETTRACELIST_TPAGE","searchResultRecord","failCallBack","API_INVENTORYPLAN_GETITEMLIST_PAGE","modalPage","modalSize","modalSelectedRowKeys","modalSelectedRows","buttonLoading","API_INVENTORYPLAN_PLANITEMEXPORT_EXPORT","modalTuttonLoading","API_INVENTORYPLAN_REPEATINVENTORY_REP","recordTableLoading","API_INVENTORYPLAN_GETITEMPRODUCTTRACE_TPAGE","detailResult","903","_dec","_class","_modal","_modal2","_table","_table2","_row","_row2","_button","_button2","_checkbox","_checkbox2","_input","_input2","_col","_col2","_message2","_message3","_getPrototypeOf","_getPrototypeOf2","_classCallCheck2","_classCallCheck3","_createClass2","_createClass3","_possibleConstructorReturn2","_possibleConstructorReturn3","_inherits2","_inherits3","_react2","_react","app","connect","state","inventoryPlan","userLoation","handleCloseModal","history","props","goBack","window","close","onChange","pagination","filters","sorter","extra","detailData","params","match","order","isAsc","columns","field","orderCode","id","current","pageSize","query","reqObj","reset","export","review","ids","success","edit","record","setState","visible","productCode","storeLocationCode","warehouseCode","handleCancel","columns1","title","width","dataIndex","render","text","index","className","onClick","columns2","_PureComponent","this","_getAsyncData","values","reservoirAreaCode","inventoryStatus","diffQtyRange","diffAmountRange","onlyInventoryDiff","onlyRepeatInventory","showTotal","range","showQuickJumper","showSizeChanger","pageSizeOptions","rowSelection","getCheckboxProps","style","paddingBottom","span","CsxMultipleSearch","dateApi","API_PRODUCT_GETPRODUCTKEYVALUES","label","searchParamsKey","selectItem","valueKey","onChangeSelect","onInputChange","e","target","CsxMultipleSelect","API_STORAGELOCATIONS_RESERVOIRAREAS","CsxSelect","offset","fontSize","checked","justify","marginRight","loading","marginTop","rowKey","dataSource","scroll","x","y","onCancel","footer","mask","PureComponent","994"],"mappings":"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","file":"js/71.020edddc854ff50868cd.js","sourcesContent":["webpackJsonp([71],{\n\n/***/ 1006:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mapDispatchToProps = undefined;\n\nvar _extends2 = __webpack_require__(3);\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _redux = __webpack_require__(161);\n\nvar _action = __webpack_require__(1069);\n\nvar actions = _interopRequireWildcard(_action);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar mapDispatchToProps = exports.mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return (0, _redux.bindActionCreators)((0, _extends3.default)({}, actions), dispatch);\n};\n\n/***/ }),\n\n/***/ 1069:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.handleDetaiList = exports.handleRep = exports.handleExport = exports.handleDetailPlan = exports.handleGetDetailRecord = exports.handleStart = exports.handleConfirmPlan = exports.handleCloseOrder = exports.handleCreateData = exports.handleCreatePlan = exports.handleGetList = exports.update = undefined;\n\nvar _extends2 = __webpack_require__(3);\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _actionType = __webpack_require__(298);\n\nvar actionType = _interopRequireWildcard(_actionType);\n\nvar _util = __webpack_require__(28);\n\nvar _api = __webpack_require__(79);\n\nvar _moment = __webpack_require__(35);\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//同步\nvar update = exports.update = function update(object) {\n  return {\n    type: actionType.INVENTORYPLAN_UPDATE,\n    data: object\n  };\n};\n\n//异步\n\n// 获取列表\nvar handleGetList = exports.handleGetList = function handleGetList(reqData, status) {\n  return function (dispatch) {\n    console.log(status, 333);\n    dispatch({ type: actionType.INVENTORYPLAN_UPDATE, data: { tableLoading: true } });\n    var reqObjSearchParams = (0, _extends3.default)({}, reqData.searchParams);\n    for (var i in reqObjSearchParams) {\n      if (Object.prototype.toString.call(reqObjSearchParams[i]) === '[object Object]') {\n        i === 'productName' ? reqObjSearchParams[i] = reqObjSearchParams[i].children : reqObjSearchParams[i] = reqObjSearchParams[i].value;\n        // reqObjSearchParams[i] = reqObjSearchParams[i].value\n      }\n    }\n    if (reqObjSearchParams.initDate && reqObjSearchParams.initDate.length) {\n      reqObjSearchParams.beginDate = (0, _moment2.default)(reqObjSearchParams.initDate[0]).format('YYYY-MM-DD');\n      reqObjSearchParams.endDate = (0, _moment2.default)(reqObjSearchParams.initDate[1]).format('YYYY-MM-DD');\n    }\n    delete reqObjSearchParams.initDate;\n    reqData.searchParams = reqObjSearchParams;\n\n    if (status) {\n      (0, _util.getData)((0, _extends3.default)({ api: _api.API_INVENTORYPLAN_GETHEADLIST_PAGE }, reqData)).then(function (data) {\n        // 相应的逻辑判断\n        var _reqData$searchParams = reqData.searchParams,\n            page = _reqData$searchParams.page,\n            size = _reqData$searchParams.size;\n\n        dispatch({\n          type: actionType.INVENTORYPLAN_UPDATE,\n          data: {\n            page: page,\n            size: size,\n            tableLoading: false,\n            total: data.result.total,\n            selectedRowKeys: [], // 选中的队列key\n            selectedRows: [], // 选中的队列数据\n            searchResult: data.result.list || []\n          }\n        });\n      }).catch(function (err) {\n        dispatch({\n          type: actionType.INVENTORYPLAN_FILE\n        });\n      });\n    } else {\n      // 查询统计数量tabs\n      console.log(reqData, 222);\n      (0, _util.getData)((0, _extends3.default)({ api: _api.API_INVENTORYPLAN_GETCOUNTBYSTATUSSORT_NUM }, reqData)).then(function (_ref) {\n        var result = _ref.result;\n\n        // 相应的逻辑判断\n        var arr = ['0', '1', '2', '3', '4'];\n        var status = '';\n        var tabNumObj = {\n          tab0: '',\n          tab1: '',\n          tab2: '',\n          tab3: '',\n          tab4: ''\n        };\n        result.map(function (o) {\n          tabNumObj['tab' + o.key] = o.value;\n        });\n        for (var _i = 0; _i < arr.length; _i++) {\n          for (var j = 0; j < result.length; j++) {\n            if (result[j].key == arr[_i] && result[j].value) {\n              status = arr[_i];\n              break;\n            }\n          }\n          if (status) break;\n        }\n        if (status) {\n          console.log(status, 77);\n          reqData.searchParams.statusCode = status;\n        }\n        (0, _util.getData)((0, _extends3.default)({ api: _api.API_INVENTORYPLAN_GETHEADLIST_PAGE }, reqData)).then(function (data) {\n          // 相应的逻辑判断\n          var _reqData$searchParams2 = reqData.searchParams,\n              page = _reqData$searchParams2.page,\n              size = _reqData$searchParams2.size;\n\n          dispatch({\n            type: actionType.INVENTORYPLAN_UPDATE,\n            data: (0, _extends3.default)({\n              page: page,\n              size: size,\n              tableLoading: false,\n              total: data.result.total,\n              tableActiveKey: status,\n              selectedRowKeys: [], // 选中的队列key\n              selectedRows: [], // 选中的队列数据\n              searchResult: data.result.list || []\n            }, tabNumObj)\n          });\n        }).catch(function (err) {\n          dispatch({\n            type: actionType.INVENTORYPLAN_FILE\n          });\n        });\n      }).catch(function (err) {\n        dispatch({\n          type: actionType.INVENTORYPLAN_FILE\n        });\n      });\n    }\n  };\n};\n\n// 创建盘点计划的列表\nvar handleCreatePlan = exports.handleCreatePlan = function handleCreatePlan(reqData, CallBack) {\n  return function (dispatch) {\n    dispatch({ type: actionType.INVENTORYPLAN_UPDATE, data: { modalTableLoading: true } });\n    (0, _util.getData)((0, _extends3.default)({ api: _api.API_INVENTORYPLAN_STOCKDETAILS_TPAGE }, reqData)).then(function (data) {\n      // 相应的逻辑判断\n      dispatch({\n        type: actionType.INVENTORYPLAN_UPDATE,\n        data: {\n          modalTableLoading: false,\n          modalTotal: data.result.length,\n          modalSearchResult: data.result || []\n        }\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: actionType.INVENTORYPLAN_FILE\n      });\n    });\n  };\n};\n\n// 生成盘点计划\nvar handleCreateData = exports.handleCreateData = function handleCreateData(reqData, callBack) {\n  return function (dispatch) {\n    (0, _util.getData)((0, _extends3.default)({ api: _api.API_INVENTORYPLAN_CREATEINVENTORYPLAN_CREATE }, reqData)).then(function (data) {\n      callBack && callBack(data.result);\n    }).catch(function (err) {\n      dispatch({\n        type: actionType.INVENTORYPLAN_FILE\n      });\n    });\n  };\n};\n\n// 取消盘点计划\nvar handleCloseOrder = exports.handleCloseOrder = function handleCloseOrder(reqData, callBack) {\n  return function (dispatch) {\n    (0, _util.getData)((0, _extends3.default)({ api: _api.API_INVENTORYPLAN_CANSOLEPLAN_CLOSE }, reqData)).then(function (data) {\n      callBack && callBack(data.result);\n      // 相应的逻辑判断\n    }).catch(function (err) {\n      dispatch({\n        type: actionType.INVENTORYPLAN_FILE\n      });\n    });\n  };\n};\n\n// 确认盘点计划\nvar handleConfirmPlan = exports.handleConfirmPlan = function handleConfirmPlan(reqData, callBack) {\n  return function (dispatch) {\n    (0, _util.getData)((0, _extends3.default)({ api: _api.API_INVENTORYPLAN_CONFIRMPLAN_DET }, reqData)).then(function (data) {\n      // 相应的逻辑判断\n      callBack && callBack(data.result);\n    }).catch(function (err) {\n      dispatch({\n        type: actionType.INVENTORYPLAN_FILE\n      });\n    });\n  };\n};\n\n// 开始盘点计划\nvar handleStart = exports.handleStart = function handleStart(reqData, callBack) {\n  return function (dispatch) {\n    (0, _util.getData)((0, _extends3.default)({ api: _api.API_INVENTORYPLAN_STARTPLAN_START }, reqData)).then(function (data) {\n      // 相应的逻辑判断\n      callBack && callBack(data.result);\n    }).catch(function (err) {\n      dispatch({\n        type: actionType.INVENTORYPLAN_FILE\n      });\n    });\n  };\n};\n\n// 获取操作记录列表\nvar handleGetDetailRecord = exports.handleGetDetailRecord = function handleGetDetailRecord(reqData) {\n  return function (dispatch) {\n    dispatch({ type: actionType.INVENTORYPLAN_UPDATE, data: { deliveryTableLoading: true } });\n    (0, _util.getData)((0, _extends3.default)({ api: _api.API_INVENTORYPLAN_GETTRACELIST_TPAGE }, reqData)).then(function (data) {\n      // 相应的逻辑判断\n      dispatch({\n        type: actionType.INVENTORYPLAN_UPDATE,\n        data: {\n          deliveryTableLoading: false,\n          searchResultRecord: data.result || []\n        }\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: actionType.INVENTORYPLAN_FILE\n      });\n    });\n  };\n};\n\n//盘点计划详情主列表查询\nvar handleDetailPlan = exports.handleDetailPlan = function handleDetailPlan(reqData, failCallBack) {\n  return function (dispatch) {\n    dispatch({ type: actionType.INVENTORYPLAN_UPDATE, data: { modalTableLoading: true } });\n    (0, _util.getData)((0, _extends3.default)({ api: _api.API_INVENTORYPLAN_GETITEMLIST_PAGE }, reqData)).then(function (data) {\n      // 相应的逻辑判断\n      var _reqData$searchParams3 = reqData.searchParams,\n          page = _reqData$searchParams3.page,\n          size = _reqData$searchParams3.size;\n\n      dispatch({\n        type: actionType.INVENTORYPLAN_UPDATE,\n        data: {\n          modalPage: page,\n          modalSize: size,\n          modalTableLoading: false,\n          modalTotal: data.result.total,\n          modalSearchResult: data.result.list || [],\n          modalSelectedRowKeys: [], // 选中的队列key\n          modalSelectedRows: [] // 选中的队列数据\n        }\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: actionType.INVENTORYPLAN_FILE\n      });\n      failCallBack && failCallBack();\n    });\n  };\n};\n\n// 盘点计划详细信息-导出计划详情EXCEL\nvar handleExport = exports.handleExport = function handleExport(reqData) {\n  return function (dispatch) {\n    dispatch({ type: actionType.INVENTORYPLAN_UPDATE, data: { buttonLoading: true } });\n    var api = _api.API_INVENTORYPLAN_PLANITEMEXPORT_EXPORT;\n    (0, _util.getData)((0, _extends3.default)({ api: api }, reqData)).then(function (data) {\n      // 相应的逻辑判断\n      dispatch({\n        type: actionType.INVENTORYPLAN_UPDATE,\n        data: {\n          buttonLoading: false\n        }\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: actionType.INVENTORYPLAN_FILE\n      });\n    });\n  };\n};\n\n// 盘点计划详细信息-复盘\nvar handleRep = exports.handleRep = function handleRep(reqData, callBack) {\n  return function (dispatch) {\n    dispatch({ type: actionType.INVENTORYPLAN_UPDATE, data: { modalTuttonLoading: true } });\n    var api = _api.API_INVENTORYPLAN_REPEATINVENTORY_REP;\n    (0, _util.getData)((0, _extends3.default)({ api: api }, reqData)).then(function (data) {\n      // 相应的逻辑判断\n      dispatch({\n        type: actionType.INVENTORYPLAN_UPDATE,\n        data: {\n          modalTuttonLoading: false\n        }\n      });\n      callBack && callBack();\n    }).catch(function (err) {\n      dispatch({\n        type: actionType.INVENTORYPLAN_FILE\n      });\n    });\n  };\n};\n\n//盘点计划详情主列表跟踪记录查询\nvar handleDetaiList = exports.handleDetaiList = function handleDetaiList(reqData, failCallBack) {\n  return function (dispatch) {\n    dispatch({ type: actionType.INVENTORYPLAN_UPDATE, data: { recordTableLoading: true } });\n    (0, _util.getData)((0, _extends3.default)({ api: _api.API_INVENTORYPLAN_GETITEMPRODUCTTRACE_TPAGE }, reqData)).then(function (data) {\n      // 相应的逻辑判断\n      dispatch({\n        type: actionType.INVENTORYPLAN_UPDATE,\n        data: {\n          recordTableLoading: false,\n          detailResult: data.result || []\n        }\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: actionType.INVENTORYPLAN_FILE\n      });\n      failCallBack && failCallBack();\n    });\n  };\n};\n\n// // 获取页面按钮权限\n// export const GetButtonPower = (reqData) => (dispatch) => {\n//   getData({api: API_GET_MENUS_PERMISSIONS_BANS, ...reqData}).then(({data}) => {\n//     console.log(data)\n//     // 相应的逻辑判断\n//     let Power = {}\n//     data.map((o) => {\n//       Power[o.menuCode] = true\n//     })\n//     dispatch({\n//       type: actionType.INVENTORYPLAN_UPDATE,\n//       data: {\n//         ...Power\n//       }\n//     })\n//   }).catch(err => {\n//     dispatch({\n//       type: actionType.INVENTORYDETAIL_FILE\n//     })\n//   })\n// }\n\n/***/ }),\n\n/***/ 903:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _modal = __webpack_require__(90);\n\nvar _modal2 = _interopRequireDefault(_modal);\n\nvar _table = __webpack_require__(278);\n\nvar _table2 = _interopRequireDefault(_table);\n\nvar _row = __webpack_require__(274);\n\nvar _row2 = _interopRequireDefault(_row);\n\nvar _button = __webpack_require__(160);\n\nvar _button2 = _interopRequireDefault(_button);\n\nvar _checkbox = __webpack_require__(994);\n\nvar _checkbox2 = _interopRequireDefault(_checkbox);\n\nvar _input = __webpack_require__(94);\n\nvar _input2 = _interopRequireDefault(_input);\n\nvar _col = __webpack_require__(276);\n\nvar _col2 = _interopRequireDefault(_col);\n\nvar _message2 = __webpack_require__(53);\n\nvar _message3 = _interopRequireDefault(_message2);\n\nvar _getPrototypeOf = __webpack_require__(18);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(5);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(10);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(6);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(7);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _extends2 = __webpack_require__(3);\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _dec, _class; /*\n                   * author: wuxiaoqi\n                   * createdTime: 2019/04/011\n                   * */\n\n__webpack_require__(91);\n\n__webpack_require__(279);\n\n__webpack_require__(275);\n\n__webpack_require__(80);\n\n__webpack_require__(164);\n\n__webpack_require__(59);\n\n__webpack_require__(277);\n\n__webpack_require__(54);\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactRedux = __webpack_require__(108);\n\nvar _mapDispatchToProps = __webpack_require__(1006);\n\nvar _Form = __webpack_require__(280);\n\nvar _api = __webpack_require__(79);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar app = (_dec = (0, _reactRedux.connect)(function (state) {\n  return (0, _extends3.default)({}, state.inventoryPlan, { userLoation: state.userLoation });\n}, _mapDispatchToProps.mapDispatchToProps), _dec(_class = function (_PureComponent) {\n  (0, _inherits3.default)(app, _PureComponent);\n\n  function app() {\n    (0, _classCallCheck3.default)(this, app);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (app.__proto__ || (0, _getPrototypeOf2.default)(app)).call(this));\n\n    _this.handleCloseModal = function () {\n      var history = _this.props.history;\n\n      history.length > 1 ? history.goBack() : window.close();\n    };\n\n    _this.onChange = function (pagination, filters, sorter, extra) {\n      var _this$props = _this.props,\n          handleDetailPlan = _this$props.handleDetailPlan,\n          detailData = _this$props.detailData,\n          modalPage = _this$props.modalPage,\n          modalSize = _this$props.modalSize,\n          params = _this$props.match.params;\n\n      if (sorter.order) {\n        if (sorter.order === 'ascend') {\n          handleDetailPlan({ searchParams: (0, _extends3.default)({ page: modalPage, size: modalSize }, detailData, { isAsc: true, columns: sorter.field, orderCode: params.id }) });\n        } else {\n          handleDetailPlan({ searchParams: (0, _extends3.default)({ page: modalPage, size: modalSize }, detailData, { isAsc: false, columns: sorter.field, orderCode: params.id }) });\n        }\n      } else {\n        // 判断是点跳页面还是排序\n        handleDetailPlan({ searchParams: (0, _extends3.default)({ page: pagination.current, size: pagination.pageSize }, detailData, { orderCode: params.id }) });\n      }\n    };\n\n    _this.query = function () {\n      var _this$props2 = _this.props,\n          handleDetailPlan = _this$props2.handleDetailPlan,\n          detailData = _this$props2.detailData,\n          modalPage = _this$props2.modalPage,\n          modalSize = _this$props2.modalSize,\n          params = _this$props2.match.params;\n\n      var reqObj = (0, _extends3.default)({}, detailData);\n      for (var i in reqObj) {\n        if (Object.prototype.toString.call(reqObj[i]) === '[object Object]') {\n          reqObj[i] = reqObj[i].value;\n        }\n      }\n      handleDetailPlan({ searchParams: (0, _extends3.default)({ page: modalPage, size: modalSize }, reqObj, { orderCode: params.id }) });\n    };\n\n    _this.reset = function () {\n      var _this$props3 = _this.props,\n          update = _this$props3.update,\n          modalSize = _this$props3.modalSize,\n          handleDetailPlan = _this$props3.handleDetailPlan,\n          params = _this$props3.match.params;\n\n      update({ detailData: {} });\n      handleDetailPlan({ searchParams: { page: 1, size: modalSize, orderCode: params.id } });\n    };\n\n    _this.export = function () {\n      var _this$props4 = _this.props,\n          handleExport = _this$props4.handleExport,\n          detailData = _this$props4.detailData,\n          params = _this$props4.match.params;\n\n      handleExport({ searchParams: (0, _extends3.default)({}, detailData, { orderCode: params.id }) });\n    };\n\n    _this.review = function () {\n      var _this$props5 = _this.props,\n          handleRep = _this$props5.handleRep,\n          params = _this$props5.match.params,\n          modalSelectedRowKeys = _this$props5.modalSelectedRowKeys;\n\n      handleRep({ data: { ids: modalSelectedRowKeys, orderCode: params.id } }, function () {\n        _message3.default.success('复盘开始');\n        var _this$props6 = _this.props,\n            handleDetailPlan = _this$props6.handleDetailPlan,\n            detailData = _this$props6.detailData,\n            modalPage = _this$props6.modalPage,\n            modalSize = _this$props6.modalSize;\n\n        var reqObj = (0, _extends3.default)({}, detailData);\n        for (var i in reqObj) {\n          if (Object.prototype.toString.call(reqObj[i]) === '[object Object]') {\n            reqObj[i] = reqObj[i].value;\n          }\n        }\n        handleDetailPlan({ searchParams: (0, _extends3.default)({ page: modalPage, size: modalSize }, reqObj, { orderCode: params.id }) });\n      });\n    };\n\n    _this.edit = function (record) {\n      var _this$props7 = _this.props,\n          handleDetaiList = _this$props7.handleDetaiList,\n          params = _this$props7.match.params,\n          userLoation = _this$props7.userLoation;\n\n      console.log(userLoation, 111);\n      _this.setState({ visible: !_this.state.visible });\n      var obj = { productCode: record.productCode, storeLocationCode: record.storeLocationCode, warehouseCode: userLoation.value };\n      handleDetaiList({ searchParams: (0, _extends3.default)({}, obj, { orderCode: params.id }) });\n    };\n\n    _this.handleCancel = function () {\n      _this.setState({ visible: !_this.state.visible });\n    };\n\n    _this.state = {\n      visible: false\n    };\n    _this.columns1 = [{\n      title: '操作',\n      width: 150,\n      dataIndex: '',\n      key: '',\n      render: function render(text, record, index) {\n        return _react2.default.createElement(\n          'div',\n          { className: 'tableOperation' },\n          _react2.default.createElement(\n            'span',\n            { onClick: function onClick() {\n                return _this.edit(record);\n              } },\n            '\\u8BB0\\u5F55'\n          )\n        );\n      }\n    }, {\n      title: '商品编码',\n      width: 150,\n      dataIndex: 'productCode',\n      key: 'productCode'\n    }, {\n      title: '商品条码',\n      width: 100,\n      dataIndex: 'productBarCode',\n      key: 'productBarCode'\n    }, {\n      title: '商品名称',\n      width: 150,\n      dataIndex: 'productName',\n      key: 'productName'\n    }, {\n      title: '单位',\n      width: 100,\n      dataIndex: 'unit',\n      key: 'unit'\n    }, {\n      title: '盘点储位',\n      width: 100,\n      dataIndex: 'storeLocationCode',\n      key: 'storeLocationCode'\n    }, {\n      title: '库区',\n      width: 100,\n      dataIndex: 'reservoirAreaCode',\n      key: 'reservoirAreaCode'\n    }, {\n      title: '盘点状态',\n      width: 100,\n      dataIndex: 'inventoryStatusDesc',\n      key: 'inventoryStatusDesc'\n    }, {\n      title: '最后一次盘点数量',\n      width: 100,\n      dataIndex: 'lastInventoryQty',\n      key: 'lastInventoryQty'\n    }, {\n      title: '最后一次盘点差异数量',\n      width: 100,\n      dataIndex: 'lastInventoryDiffQty',\n      key: 'lastInventoryDiffQty'\n    }, {\n      title: '最后一次盘点差异金额（含税）',\n      width: 100,\n      dataIndex: 'lastInventoryAmountDiff',\n      key: 'lastInventoryAmountDiff'\n    }, {\n      title: '最后一次盘点差异金额（不含税）',\n      width: 150,\n      dataIndex: 'lastInventoryAmountDiffNoTax',\n      key: 'lastInventoryAmountDiffNoTax'\n    }, {\n      title: '最新操作人',\n      width: 150,\n      dataIndex: 'updateBy',\n      key: 'updateBy'\n    }, {\n      title: '最新操作时间',\n      width: 150,\n      dataIndex: 'updateTime',\n      key: 'updateTime'\n    }];\n\n    _this.columns2 = [{\n      title: '盘点数量',\n      width: 150,\n      dataIndex: 'inventoryQty',\n      key: 'inventoryQty'\n    }, {\n      title: '盘点差异量',\n      width: 150,\n      dataIndex: 'inventoryDiffQty',\n      key: 'inventoryDiffQty'\n    }, {\n      title: '操作人',\n      width: 100,\n      dataIndex: 'createBy',\n      key: 'createBy'\n    }, {\n      title: '操作时间',\n      width: 150,\n      dataIndex: 'createTime',\n      key: 'createTime'\n    }, {\n      title: '备注',\n      width: 200,\n      dataIndex: 'remark',\n      key: 'remark'\n    }];\n    return _this;\n  }\n\n  (0, _createClass3.default)(app, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this._getAsyncData();\n    }\n\n    // 根据tabs的key来判断请求哪个接口\n\n  }, {\n    key: '_getAsyncData',\n    value: function _getAsyncData() {\n      var _props = this.props,\n          handleDetailPlan = _props.handleDetailPlan,\n          modalSize = _props.modalSize,\n          modalPage = _props.modalPage,\n          params = _props.match.params;\n\n      handleDetailPlan({ searchParams: { size: modalSize, page: modalPage, orderCode: params.id } });\n    }\n    // 关闭弹窗\n\n\n    // isAsc 是否升序 true, false\n\n  }, {\n    key: 'onInputChange',\n    value: function onInputChange(values) {\n      var _props2 = this.props,\n          update = _props2.update,\n          detailData = _props2.detailData;\n\n      console.log(values);\n      update({ detailData: (0, _extends3.default)({}, detailData, values) });\n    }\n\n    // 查询数据\n\n\n    // 重置\n\n\n    //导出\n\n\n    //复盘\n\n\n    // 记录\n\n    // 关闭记录弹窗\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props3 = this.props,\n          _props3$detailData = _props3.detailData,\n          productCode = _props3$detailData.productCode,\n          storeLocationCode = _props3$detailData.storeLocationCode,\n          reservoirAreaCode = _props3$detailData.reservoirAreaCode,\n          inventoryStatus = _props3$detailData.inventoryStatus,\n          diffQtyRange = _props3$detailData.diffQtyRange,\n          diffAmountRange = _props3$detailData.diffAmountRange,\n          onlyInventoryDiff = _props3$detailData.onlyInventoryDiff,\n          onlyRepeatInventory = _props3$detailData.onlyRepeatInventory,\n          params = _props3.match.params,\n          buttonLoading = _props3.buttonLoading,\n          modalTuttonLoading = _props3.modalTuttonLoading,\n          detailResult = _props3.detailResult,\n          userLoation = _props3.userLoation;\n      var _props4 = this.props,\n          modalTotal = _props4.modalTotal,\n          modalPage = _props4.modalPage,\n          modalSize = _props4.modalSize,\n          modalTableLoading = _props4.modalTableLoading,\n          recordTableLoading = _props4.recordTableLoading,\n          modalSearchResult = _props4.modalSearchResult,\n          modalSelectedRowKeys = _props4.modalSelectedRowKeys;\n\n      var pagination = {\n        total: modalTotal,\n        showTotal: function showTotal(total, range) {\n          return '\\u5171 ' + total + ' \\u6761';\n        }, // 显示总数\n        showQuickJumper: true, // 是否可以快速跳转至某页\n        current: modalPage,\n        pageSize: modalSize,\n        showSizeChanger: true, // 是否可以改变 pageSize\n        className: 'pagination',\n        pageSizeOptions: ['50', '100', '200', '500']\n      };\n      var rowSelection = {\n        onChange: function onChange(modalSelectedRowKeys, modalSelectedRows) {\n          var update = _this2.props.update;\n\n          update({ modalSelectedRowKeys: modalSelectedRowKeys, modalSelectedRows: modalSelectedRows });\n        },\n        modalSelectedRowKeys: modalSelectedRowKeys,\n        getCheckboxProps: function getCheckboxProps(record) {\n          return {\n            // disabled: record.receiveStatus == '2' // Column configuration not to be checked\n          };\n        }\n      };\n      return _react2.default.createElement(\n        'div',\n        { className: 'fullOrderDel' },\n        _react2.default.createElement('span', { className: 'ant-modal-close-x close', onClick: this.handleCloseModal }),\n        _react2.default.createElement(\n          'h3',\n          { style: { paddingBottom: '10px' } },\n          '\\u8BA1\\u5212\\u5355\\u53F7\\uFF1A',\n          params.id\n        ),\n        _react2.default.createElement(\n          'div',\n          null,\n          _react2.default.createElement(\n            _row2.default,\n            null,\n            _react2.default.createElement(\n              _col2.default,\n              { span: 8 },\n              _react2.default.createElement(_Form.CsxMultipleSearch, {\n                dateApi: _api.API_PRODUCT_GETPRODUCTKEYVALUES,\n                label: '\\u5546\\u54C1\\u7F16\\u7801',\n                searchParamsKey: 'productCode',\n                searchParams: { warehouseCode: userLoation.value },\n                selectItem: { data: productCode, key: 'key', valueKey: ['key', 'value'] },\n                onChangeSelect: function onChangeSelect(value) {\n                  _this2.onInputChange({ productCode: value });\n                }\n              })\n            ),\n            _react2.default.createElement(\n              _col2.default,\n              { span: 8 },\n              _react2.default.createElement(\n                'div',\n                { className: 'commonInput' },\n                _react2.default.createElement(\n                  'label',\n                  null,\n                  '\\u50A8\\u4F4D\\u7F16\\u7801\\uFF1A'\n                ),\n                _react2.default.createElement(\n                  'div',\n                  { className: 'box' },\n                  _react2.default.createElement(_input2.default, { value: storeLocationCode, onChange: function onChange(e) {\n                      _this2.onInputChange({ storeLocationCode: e.target.value });\n                    } })\n                )\n              )\n            ),\n            _react2.default.createElement(\n              _col2.default,\n              { span: 8 },\n              _react2.default.createElement(_Form.CsxMultipleSelect, {\n                dateApi: _api.API_STORAGELOCATIONS_RESERVOIRAREAS,\n                label: '\\u5E93\\u533A',\n                selectItem: { data: reservoirAreaCode, key: 'key', valueKey: ['key', 'value'] },\n                onChangeSelect: function onChangeSelect(value) {\n                  _this2.onInputChange({ reservoirAreaCode: value });\n                }\n              })\n            ),\n            _react2.default.createElement(\n              _col2.default,\n              { span: 8 },\n              _react2.default.createElement(_Form.CsxSelect, {\n                label: '\\u72B6\\u6001',\n                data: [{ key: 0, value: '初始' }, { key: 1, value: '待盘点' }, { key: 2, value: '已完成' }, { key: 3, value: '已确认' }, { key: 4, value: '已取消' }],\n                selectItem: { data: inventoryStatus, key: 'key', valueKey: 'value' },\n                onChangeSelect: function onChangeSelect(value) {\n                  _this2.onInputChange({ inventoryStatus: value });\n                }\n              })\n            ),\n            _react2.default.createElement(\n              _col2.default,\n              { span: 8 },\n              _react2.default.createElement(\n                'div',\n                { className: 'commonInput' },\n                _react2.default.createElement(\n                  'label',\n                  null,\n                  '\\u5DEE\\u5F02\\u6570\\u91CF\\u8303\\u56F4\\uFF1A+-'\n                ),\n                _react2.default.createElement(\n                  'div',\n                  { className: 'box' },\n                  _react2.default.createElement(_input2.default, { value: diffQtyRange, onChange: function onChange(e) {\n                      _this2.onInputChange({ diffQtyRange: e.target.value });\n                    } })\n                )\n              )\n            ),\n            _react2.default.createElement(\n              _col2.default,\n              { span: 8 },\n              _react2.default.createElement(\n                'div',\n                { className: 'commonInput' },\n                _react2.default.createElement(\n                  'label',\n                  null,\n                  '\\u5DEE\\u5F02\\u91D1\\u989D\\u8303\\u56F4\\uFF1A+-'\n                ),\n                _react2.default.createElement(\n                  'div',\n                  { className: 'box' },\n                  _react2.default.createElement(_input2.default, { value: diffAmountRange, onChange: function onChange(e) {\n                      _this2.onInputChange({ diffAmountRange: e.target.value });\n                    } })\n                )\n              )\n            ),\n            _react2.default.createElement(\n              _col2.default,\n              { span: 11, offset: 1 },\n              _react2.default.createElement(\n                _checkbox2.default,\n                { style: { fontSize: '12px' }, checked: onlyInventoryDiff, onChange: function onChange(e) {\n                    _this2.onInputChange({ onlyInventoryDiff: e.target.checked });\n                  } },\n                '\\u53EA\\u67E5\\u770B\\u76D8\\u70B9\\u5DEE\\u5F02 '\n              ),\n              _react2.default.createElement(\n                _checkbox2.default,\n                { style: { fontSize: '12px' }, checked: onlyRepeatInventory, onChange: function onChange(e) {\n                    _this2.onInputChange({ onlyRepeatInventory: e.target.checked });\n                  } },\n                '\\u53EA\\u67E5\\u770B\\u590D\\u76D8 '\n              )\n            ),\n            _react2.default.createElement(\n              _col2.default,\n              { span: 12 },\n              _react2.default.createElement(\n                _row2.default,\n                { type: 'flex', justify: 'end' },\n                _react2.default.createElement(\n                  _button2.default,\n                  { type: 'primary', style: { marginRight: '10px' }, onClick: this.query },\n                  '\\u67E5\\u8BE2'\n                ),\n                _react2.default.createElement(\n                  _button2.default,\n                  { type: 'primary', style: { marginRight: '10%' }, onClick: this.reset },\n                  '\\u91CD\\u7F6E'\n                )\n              )\n            ),\n            _react2.default.createElement(\n              _col2.default,\n              { span: 24 },\n              _react2.default.createElement(\n                _row2.default,\n                { type: 'flex', justify: 'start' },\n                _react2.default.createElement(\n                  _button2.default,\n                  { type: 'primary', style: { marginRight: '10px' }, onClick: this.review, loading: modalTuttonLoading },\n                  '\\u590D\\u76D8'\n                ),\n                _react2.default.createElement(\n                  _button2.default,\n                  { type: 'primary', onClick: this.export, loading: buttonLoading },\n                  '\\u5BFC\\u51FA'\n                )\n              )\n            )\n          )\n        ),\n        _react2.default.createElement(\n          'div',\n          { className: 'table-group', style: { marginTop: '15px' } },\n          _react2.default.createElement(_table2.default, {\n            rowKey: function rowKey(record) {\n              return record.id;\n            },\n            loading: modalTableLoading,\n            columns: this.columns1,\n            dataSource: modalSearchResult,\n            scroll: { x: 'max-content', y: 400 },\n            onChange: this.onChange,\n            pagination: pagination,\n            rowSelection: rowSelection\n          })\n        ),\n        _react2.default.createElement(\n          'div',\n          null,\n          _react2.default.createElement(\n            _modal2.default,\n            {\n              title: '\\u76D8\\u70B9\\u8BB0\\u5F55',\n              visible: this.state.visible,\n              onCancel: this.handleCancel,\n              footer: null,\n              mask: false,\n              width: 1024\n            },\n            _react2.default.createElement(\n              'div',\n              { className: 'table-group', style: { marginTop: '15px' } },\n              _react2.default.createElement(_table2.default, {\n                rowKey: function rowKey(record, index) {\n                  return index;\n                },\n                loading: recordTableLoading,\n                columns: this.columns2,\n                dataSource: detailResult,\n                scroll: { x: 'max-content', y: 400 },\n                pagination: false\n              })\n            )\n          )\n        )\n      );\n    }\n  }]);\n  return app;\n}(_react.PureComponent)) || _class);\nexports.default = app;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 994:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = (__webpack_require__(1))(111);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// js/71.020edddc854ff50868cd.js","import {bindActionCreators} from 'redux'\nimport * as actions from './action'\n\nexport const mapDispatchToProps = (dispatch) => bindActionCreators({\n  ...actions\n}, dispatch)\n\n\n\n// WEBPACK FOOTER //\n// ./src_admin/page/inventoryPlan/redux/mapDispatchToProps.js","import * as actionType from './actionType'\nimport {getData} from 'util'\nimport {API_INVENTORYPLAN_GETHEADLIST_PAGE, API_INVENTORYPLAN_GETTRACELIST_TPAGE, API_INVENTORYPLAN_PLANITEMEXPORT_EXPORT, API_INVENTORYPLAN_CREATEINVENTORYPLAN_CREATE, API_INVENTORYPLAN_CANSOLEPLAN_CLOSE, API_INVENTORYPLAN_CONFIRMPLAN_DET, API_INVENTORYPLAN_STARTPLAN_START, API_INVENTORYPLAN_STOCKDETAILS_TPAGE, API_INVENTORYPLAN_GETCOUNTBYSTATUSSORT_NUM, API_INVENTORYPLAN_GETITEMLIST_PAGE, API_INVENTORYPLAN_REPEATINVENTORY_REP, API_INVENTORYPLAN_GETITEMPRODUCTTRACE_TPAGE} from 'api'\nimport moment from 'moment'\n\n//同步\nexport const update = (object) => ({\n  type: actionType.INVENTORYPLAN_UPDATE,\n  data: object\n})\n\n//异步\n\n// 获取列表\nexport const handleGetList = (reqData, status) => (dispatch) => {\n  console.log(status, 333)\n  dispatch({type: actionType.INVENTORYPLAN_UPDATE, data: {tableLoading: true}})\n  let reqObjSearchParams = {...reqData.searchParams}\n  for (let i in reqObjSearchParams) {\n    if (Object.prototype.toString.call(reqObjSearchParams[i]) === '[object Object]') {\n      i === 'productName' ? reqObjSearchParams[i] = reqObjSearchParams[i].children : reqObjSearchParams[i] = reqObjSearchParams[i].value\n      // reqObjSearchParams[i] = reqObjSearchParams[i].value\n    }\n  }\n  if (reqObjSearchParams.initDate && reqObjSearchParams.initDate.length) {\n    reqObjSearchParams.beginDate = moment(reqObjSearchParams.initDate[0]).format('YYYY-MM-DD')\n    reqObjSearchParams.endDate = moment(reqObjSearchParams.initDate[1]).format('YYYY-MM-DD')\n  }\n  delete reqObjSearchParams.initDate\n  reqData.searchParams = reqObjSearchParams\n\n  if (status) {\n    getData({api: API_INVENTORYPLAN_GETHEADLIST_PAGE, ...reqData}).then(data => {\n      // 相应的逻辑判断\n      let {page, size} = reqData.searchParams\n      dispatch({\n        type: actionType.INVENTORYPLAN_UPDATE,\n        data: {\n          page,\n          size,\n          tableLoading: false,\n          total: data.result.total,\n          selectedRowKeys: [], // 选中的队列key\n          selectedRows: [], // 选中的队列数据\n          searchResult: data.result.list || []\n        }\n      })\n    }).catch(err => {\n      dispatch({\n        type: actionType.INVENTORYPLAN_FILE\n      })\n    })\n  } else {\n    // 查询统计数量tabs\n    console.log(reqData, 222)\n    getData({api: API_INVENTORYPLAN_GETCOUNTBYSTATUSSORT_NUM, ...reqData}).then(({result}) => {\n      // 相应的逻辑判断\n      let arr = ['0', '1', '2', '3', '4']\n      let status = ''\n      let tabNumObj = {\n        tab0: '',\n        tab1: '',\n        tab2: '',\n        tab3: '',\n        tab4: ''\n      }\n      result.map((o) => {\n        tabNumObj[`tab${o.key}`] = o.value\n      })\n      for (let i = 0; i < arr.length; i++) {\n        for (let j = 0; j < result.length; j++) {\n          if (result[j].key == arr[i] && result[j].value) {\n            status = arr[i]\n            break\n          }\n        }\n        if (status) break\n      }\n      if (status) {\n        console.log(status, 77)\n        reqData.searchParams.statusCode = status\n      }\n      getData({api: API_INVENTORYPLAN_GETHEADLIST_PAGE, ...reqData}).then(data => {\n        // 相应的逻辑判断\n        let {page, size} = reqData.searchParams\n        dispatch({\n          type: actionType.INVENTORYPLAN_UPDATE,\n          data: {\n            page,\n            size,\n            tableLoading: false,\n            total: data.result.total,\n            tableActiveKey: status,\n            selectedRowKeys: [], // 选中的队列key\n            selectedRows: [], // 选中的队列数据\n            searchResult: data.result.list || [],\n            ...tabNumObj\n          }\n        })\n      }).catch(err => {\n        dispatch({\n          type: actionType.INVENTORYPLAN_FILE\n        })\n      })\n    }).catch(err => {\n      dispatch({\n        type: actionType.INVENTORYPLAN_FILE\n      })\n    })\n  }\n}\n\n// 创建盘点计划的列表\nexport const handleCreatePlan = (reqData, CallBack) => (dispatch) => {\n  dispatch({type: actionType.INVENTORYPLAN_UPDATE, data: {modalTableLoading: true}})\n  getData({api: API_INVENTORYPLAN_STOCKDETAILS_TPAGE, ...reqData}).then(data => {\n    // 相应的逻辑判断\n    dispatch({\n      type: actionType.INVENTORYPLAN_UPDATE,\n      data: {\n        modalTableLoading: false,\n        modalTotal: data.result.length,\n        modalSearchResult: data.result || []\n      }\n    })\n  }).catch(err => {\n    dispatch({\n      type: actionType.INVENTORYPLAN_FILE\n    })\n  })\n}\n\n// 生成盘点计划\nexport const handleCreateData = (reqData, callBack) => (dispatch) => {\n  getData({api: API_INVENTORYPLAN_CREATEINVENTORYPLAN_CREATE, ...reqData}).then(data => {\n    callBack && callBack(data.result)\n  }).catch(err => {\n    dispatch({\n      type: actionType.INVENTORYPLAN_FILE\n    })\n  })\n}\n\n// 取消盘点计划\nexport const handleCloseOrder = (reqData, callBack) => (dispatch) => {\n  getData({api: API_INVENTORYPLAN_CANSOLEPLAN_CLOSE, ...reqData}).then(data => {\n    callBack && callBack(data.result)\n    // 相应的逻辑判断\n  }).catch(err => {\n    dispatch({\n      type: actionType.INVENTORYPLAN_FILE\n    })\n  })\n}\n\n// 确认盘点计划\nexport const handleConfirmPlan = (reqData, callBack) => (dispatch) => {\n  getData({api: API_INVENTORYPLAN_CONFIRMPLAN_DET, ...reqData}).then(data => {\n    // 相应的逻辑判断\n    callBack && callBack(data.result)\n  }).catch(err => {\n    dispatch({\n      type: actionType.INVENTORYPLAN_FILE\n    })\n  })\n}\n\n// 开始盘点计划\nexport const handleStart = (reqData, callBack) => (dispatch) => {\n  getData({api: API_INVENTORYPLAN_STARTPLAN_START, ...reqData}).then(data => {\n    // 相应的逻辑判断\n    callBack && callBack(data.result)\n  }).catch(err => {\n    dispatch({\n      type: actionType.INVENTORYPLAN_FILE\n    })\n  })\n}\n\n// 获取操作记录列表\nexport const handleGetDetailRecord = (reqData) => (dispatch) => {\n  dispatch({type: actionType.INVENTORYPLAN_UPDATE, data: {deliveryTableLoading: true}})\n  getData({api: API_INVENTORYPLAN_GETTRACELIST_TPAGE, ...reqData}).then(data => {\n    // 相应的逻辑判断\n    dispatch({\n      type: actionType.INVENTORYPLAN_UPDATE,\n      data: {\n        deliveryTableLoading: false,\n        searchResultRecord: data.result || []\n      }\n    })\n  }).catch(err => {\n    dispatch({\n      type: actionType.INVENTORYPLAN_FILE\n    })\n  })\n}\n\n//盘点计划详情主列表查询\nexport const handleDetailPlan = (reqData, failCallBack) => (dispatch) => {\n  dispatch({type: actionType.INVENTORYPLAN_UPDATE, data: {modalTableLoading: true}})\n  getData({api: API_INVENTORYPLAN_GETITEMLIST_PAGE, ...reqData}).then(data => {\n    // 相应的逻辑判断\n    let {page, size} = reqData.searchParams\n    dispatch({\n      type: actionType.INVENTORYPLAN_UPDATE,\n      data: {\n        modalPage: page,\n        modalSize: size,\n        modalTableLoading: false,\n        modalTotal: data.result.total,\n        modalSearchResult: data.result.list || [],\n        modalSelectedRowKeys: [], // 选中的队列key\n        modalSelectedRows: [] // 选中的队列数据\n      }\n    })\n  }).catch(err => {\n    dispatch({\n      type: actionType.INVENTORYPLAN_FILE\n    })\n    failCallBack && failCallBack()\n  })\n}\n\n// 盘点计划详细信息-导出计划详情EXCEL\nexport const handleExport = (reqData) => (dispatch) => {\n  dispatch({type: actionType.INVENTORYPLAN_UPDATE, data: {buttonLoading: true}})\n  let api = API_INVENTORYPLAN_PLANITEMEXPORT_EXPORT\n  getData({api, ...reqData}).then(data => {\n    // 相应的逻辑判断\n    dispatch({\n      type: actionType.INVENTORYPLAN_UPDATE,\n      data: {\n        buttonLoading: false\n      }\n    })\n  }).catch(err => {\n    dispatch({\n      type: actionType.INVENTORYPLAN_FILE\n    })\n  })\n}\n\n// 盘点计划详细信息-复盘\nexport const handleRep = (reqData, callBack) => (dispatch) => {\n  dispatch({type: actionType.INVENTORYPLAN_UPDATE, data: {modalTuttonLoading: true}})\n  let api = API_INVENTORYPLAN_REPEATINVENTORY_REP\n  getData({api, ...reqData}).then(data => {\n    // 相应的逻辑判断\n    dispatch({\n      type: actionType.INVENTORYPLAN_UPDATE,\n      data: {\n        modalTuttonLoading: false\n      }\n    })\n    callBack && callBack()\n  }).catch(err => {\n    dispatch({\n      type: actionType.INVENTORYPLAN_FILE\n    })\n  })\n}\n\n//盘点计划详情主列表跟踪记录查询\nexport const handleDetaiList = (reqData, failCallBack) => (dispatch) => {\n  dispatch({type: actionType.INVENTORYPLAN_UPDATE, data: {recordTableLoading: true}})\n  getData({api: API_INVENTORYPLAN_GETITEMPRODUCTTRACE_TPAGE, ...reqData}).then(data => {\n    // 相应的逻辑判断\n    dispatch({\n      type: actionType.INVENTORYPLAN_UPDATE,\n      data: {\n        recordTableLoading: false,\n        detailResult: data.result || []\n      }\n    })\n  }).catch(err => {\n    dispatch({\n      type: actionType.INVENTORYPLAN_FILE\n    })\n    failCallBack && failCallBack()\n  })\n}\n\n// // 获取页面按钮权限\n// export const GetButtonPower = (reqData) => (dispatch) => {\n//   getData({api: API_GET_MENUS_PERMISSIONS_BANS, ...reqData}).then(({data}) => {\n//     console.log(data)\n//     // 相应的逻辑判断\n//     let Power = {}\n//     data.map((o) => {\n//       Power[o.menuCode] = true\n//     })\n//     dispatch({\n//       type: actionType.INVENTORYPLAN_UPDATE,\n//       data: {\n//         ...Power\n//       }\n//     })\n//   }).catch(err => {\n//     dispatch({\n//       type: actionType.INVENTORYDETAIL_FILE\n//     })\n//   })\n// }\n\n\n\n// WEBPACK FOOTER //\n// ./src_admin/page/inventoryPlan/redux/action.js","/*\n * author: wuxiaoqi\n * createdTime: 2019/04/011\n * */\n\nimport React, {PureComponent} from 'react'\nimport {\n  Modal,\n  Row,\n  Col,\n  Table,\n  Checkbox,\n  Input,\n  Button,\n  message\n} from 'antd'\nimport {connect} from 'react-redux'\nimport {mapDispatchToProps} from '../redux/mapDispatchToProps'\nimport {CsxMultipleSelect, CsxSelect, CsxMultipleSearch} from 'Form'\nimport {API_STORAGELOCATIONS_RESERVOIRAREAS, API_PRODUCT_GETPRODUCTKEYVALUES} from 'api'\n\n@connect(\n  state => ({...state.inventoryPlan, userLoation: state.userLoation}),\n  mapDispatchToProps\n)\nexport default class app extends PureComponent {\n  constructor() {\n    super()\n    this.state = {\n      visible: false\n    }\n    this.columns1 = [{\n      title: '操作',\n      width: 150,\n      dataIndex: '',\n      key: '',\n      render: (text, record, index) => <div className=\"tableOperation\">\n        <span onClick={() => this.edit(record)}>记录</span>\n      </div>\n    }, {\n      title: '商品编码',\n      width: 150,\n      dataIndex: 'productCode',\n      key: 'productCode'\n    }, {\n      title: '商品条码',\n      width: 100,\n      dataIndex: 'productBarCode',\n      key: 'productBarCode'\n    }, {\n      title: '商品名称',\n      width: 150,\n      dataIndex: 'productName',\n      key: 'productName'\n    }, {\n      title: '单位',\n      width: 100,\n      dataIndex: 'unit',\n      key: 'unit'\n    }, {\n      title: '盘点储位',\n      width: 100,\n      dataIndex: 'storeLocationCode',\n      key: 'storeLocationCode'\n    }, {\n      title: '库区',\n      width: 100,\n      dataIndex: 'reservoirAreaCode',\n      key: 'reservoirAreaCode'\n    }, {\n      title: '盘点状态',\n      width: 100,\n      dataIndex: 'inventoryStatusDesc',\n      key: 'inventoryStatusDesc'\n    }, {\n      title: '最后一次盘点数量',\n      width: 100,\n      dataIndex: 'lastInventoryQty',\n      key: 'lastInventoryQty'\n    }, {\n      title: '最后一次盘点差异数量',\n      width: 100,\n      dataIndex: 'lastInventoryDiffQty',\n      key: 'lastInventoryDiffQty'\n    }, {\n      title: '最后一次盘点差异金额（含税）',\n      width: 100,\n      dataIndex: 'lastInventoryAmountDiff',\n      key: 'lastInventoryAmountDiff'\n    }, {\n      title: '最后一次盘点差异金额（不含税）',\n      width: 150,\n      dataIndex: 'lastInventoryAmountDiffNoTax',\n      key: 'lastInventoryAmountDiffNoTax'\n    }, {\n      title: '最新操作人',\n      width: 150,\n      dataIndex: 'updateBy',\n      key: 'updateBy'\n    }, {\n      title: '最新操作时间',\n      width: 150,\n      dataIndex: 'updateTime',\n      key: 'updateTime'\n    }]\n\n    this.columns2 = [{\n      title: '盘点数量',\n      width: 150,\n      dataIndex: 'inventoryQty',\n      key: 'inventoryQty'\n    }, {\n      title: '盘点差异量',\n      width: 150,\n      dataIndex: 'inventoryDiffQty',\n      key: 'inventoryDiffQty'\n    }, {\n      title: '操作人',\n      width: 100,\n      dataIndex: 'createBy',\n      key: 'createBy'\n    }, {\n      title: '操作时间',\n      width: 150,\n      dataIndex: 'createTime',\n      key: 'createTime'\n    }, {\n      title: '备注',\n      width: 200,\n      dataIndex: 'remark',\n      key: 'remark'\n    }]\n  }\n\n  componentDidMount() {\n    this._getAsyncData()\n  }\n\n  // 根据tabs的key来判断请求哪个接口\n  _getAsyncData() {\n    const {handleDetailPlan, modalSize, modalPage, match: {params}} = this.props\n    handleDetailPlan({searchParams: {size: modalSize, page: modalPage, orderCode: params.id}})\n  }\n  // 关闭弹窗\n  handleCloseModal = () => {\n    const {history} = this.props\n    history.length > 1 ? history.goBack() : window.close()\n  }\n\n  // isAsc 是否升序 true, false\n  onChange = (pagination, filters, sorter, extra) => {\n    const {handleDetailPlan, detailData, modalPage, modalSize, match: {params}} = this.props\n    if (sorter.order) {\n      if (sorter.order === 'ascend') {\n        handleDetailPlan({searchParams: {page: modalPage, size: modalSize, ...detailData, isAsc: true, columns: sorter.field, orderCode: params.id}})\n      } else {\n        handleDetailPlan({searchParams: {page: modalPage, size: modalSize, ...detailData, isAsc: false, columns: sorter.field, orderCode: params.id}})\n      }\n    } else {\n      // 判断是点跳页面还是排序\n      handleDetailPlan({searchParams: {page: pagination.current, size: pagination.pageSize, ...detailData, orderCode: params.id}})\n    }\n  }\n\n  onInputChange(values) {\n    const {update, detailData} = this.props\n    console.log(values)\n    update({detailData: {...detailData, ...values}})\n  }\n\n  // 查询数据\n  query = () => {\n    const {handleDetailPlan, detailData, modalPage, modalSize, match: {params}} = this.props\n    let reqObj = {...detailData}\n    for (let i in reqObj) {\n      if (Object.prototype.toString.call(reqObj[i]) === '[object Object]') {\n        reqObj[i] = reqObj[i].value\n      }\n    }\n    handleDetailPlan({searchParams: {page: modalPage, size: modalSize, ...reqObj, orderCode: params.id}})\n  }\n\n  // 重置\n  reset = () => {\n    const {update, modalSize, handleDetailPlan, match: {params}} = this.props\n    update({detailData: {}})\n    handleDetailPlan({searchParams: {page: 1, size: modalSize, orderCode: params.id}})\n  }\n\n  //导出\n  export = () => {\n    const {handleExport, detailData, match: {params}} = this.props\n    handleExport({searchParams: {...detailData, orderCode: params.id}})\n  }\n\n  //复盘\n  review = () => {\n    const {handleRep, match: {params}, modalSelectedRowKeys} = this.props\n    handleRep({data: {ids: modalSelectedRowKeys, orderCode: params.id}}, () => {\n      message.success('复盘开始')\n      const {handleDetailPlan, detailData, modalPage, modalSize} = this.props\n      let reqObj = {...detailData}\n      for (let i in reqObj) {\n        if (Object.prototype.toString.call(reqObj[i]) === '[object Object]') {\n          reqObj[i] = reqObj[i].value\n        }\n      }\n      handleDetailPlan({searchParams: {page: modalPage, size: modalSize, ...reqObj, orderCode: params.id}})\n    })\n  }\n\n  // 记录\n  edit=(record) => {\n    const {handleDetaiList, match: {params}, userLoation} = this.props\n    console.log(userLoation, 111)\n    this.setState({visible: !this.state.visible})\n    let obj = {productCode: record.productCode, storeLocationCode: record.storeLocationCode, warehouseCode: userLoation.value}\n    handleDetaiList({searchParams: {...obj, orderCode: params.id}})\n  }\n  // 关闭记录弹窗\n  handleCancel=() => {\n    this.setState({visible: !this.state.visible})\n  }\n\n  render() {\n    const {\n      detailData: {\n        productCode,\n        storeLocationCode,\n        reservoirAreaCode,\n        inventoryStatus,\n        diffQtyRange,\n        diffAmountRange,\n        onlyInventoryDiff,\n        onlyRepeatInventory\n      },\n      match: {params},\n      buttonLoading,\n      modalTuttonLoading,\n      detailResult,\n      userLoation\n    } = this.props\n    const {\n      modalTotal,\n      modalPage,\n      modalSize,\n      modalTableLoading,\n      recordTableLoading,\n      modalSearchResult,\n      modalSelectedRowKeys\n    } = this.props\n    let pagination = {\n      total: modalTotal,\n      showTotal: (total, range) => `共 ${total} 条`, // 显示总数\n      showQuickJumper: true, // 是否可以快速跳转至某页\n      current: modalPage,\n      pageSize: modalSize,\n      showSizeChanger: true, // 是否可以改变 pageSize\n      className: 'pagination',\n      pageSizeOptions: ['50', '100', '200', '500']\n    }\n    let rowSelection = {\n      onChange: (modalSelectedRowKeys, modalSelectedRows) => {\n        const {update} = this.props\n        update({modalSelectedRowKeys, modalSelectedRows})\n      },\n      modalSelectedRowKeys,\n      getCheckboxProps: record => ({\n        // disabled: record.receiveStatus == '2' // Column configuration not to be checked\n      })\n    }\n    return (\n      <div className='fullOrderDel'>\n        <span className='ant-modal-close-x close' onClick={this.handleCloseModal}></span>\n        <h3 style={{paddingBottom: '10px'}}>计划单号：{params.id}</h3>\n        <div>\n          <Row>\n          <Col span={8}>\n            <CsxMultipleSearch\n              dateApi={API_PRODUCT_GETPRODUCTKEYVALUES}\n              label='商品编码'\n              searchParamsKey='productCode'\n              searchParams={{warehouseCode: userLoation.value}}\n              selectItem={{data: productCode, key: 'key', valueKey: ['key', 'value']}}\n              onChangeSelect={(value) => {\n                this.onInputChange({productCode: value})\n              }}\n            />\n          </Col>\n            <Col span={8}>\n              <div className='commonInput'>\n                <label>储位编码：</label>\n                <div className='box'>\n                  <Input value={storeLocationCode} onChange={(e) => {\n                    this.onInputChange({storeLocationCode: e.target.value})\n                  }} />\n                </div>\n              </div>\n            </Col>\n            <Col span={8}>\n              <CsxMultipleSelect\n                dateApi={API_STORAGELOCATIONS_RESERVOIRAREAS}\n                label='库区'\n                selectItem={{data: reservoirAreaCode, key: 'key', valueKey: ['key', 'value']}}\n                onChangeSelect={(value) => {\n                  this.onInputChange({reservoirAreaCode: value})\n                }}\n              />\n            </Col>\n            <Col span={8}>\n              <CsxSelect\n                label='状态'\n                data={[{key: 0, value: '初始'}, {key: 1, value: '待盘点'}, {key: 2, value: '已完成'}, {key: 3, value: '已确认'}, {key: 4, value: '已取消'}]}\n                selectItem={{data: inventoryStatus, key: 'key', valueKey: 'value'}}\n                onChangeSelect={(value) => {\n                  this.onInputChange({inventoryStatus: value})\n                }}\n              />\n            </Col>\n            <Col span={8}>\n              <div className='commonInput'>\n                <label>差异数量范围：+-</label>\n                <div className='box'>\n                  <Input value={diffQtyRange} onChange={(e) => {\n                    this.onInputChange({diffQtyRange: e.target.value})\n                  }} />\n                </div>\n              </div>\n            </Col>\n            <Col span={8}>\n              <div className='commonInput'>\n                <label>差异金额范围：+-</label>\n                <div className='box'>\n                  <Input value={diffAmountRange} onChange={(e) => {\n                    this.onInputChange({diffAmountRange: e.target.value})\n                  }} />\n                </div>\n              </div>\n            </Col>\n            <Col span={11} offset={1}>\n              <Checkbox style={{fontSize: '12px'}} checked={onlyInventoryDiff} onChange={(e) => {\n                this.onInputChange({onlyInventoryDiff: e.target.checked})\n              }}>只查看盘点差异 </Checkbox>\n              <Checkbox style={{fontSize: '12px'}} checked={onlyRepeatInventory} onChange={(e) => {\n                this.onInputChange({onlyRepeatInventory: e.target.checked})\n              }}>只查看复盘 </Checkbox>\n            </Col>\n            <Col span={12}>\n              <Row type=\"flex\" justify=\"end\" >\n                <Button type=\"primary\" style={{marginRight: '10px'}} onClick={this.query} >查询</Button>\n                <Button type=\"primary\" style={{marginRight: '10%'}} onClick={this.reset} >重置</Button>\n              </Row>\n            </Col>\n            <Col span={24}>\n              <Row type=\"flex\" justify=\"start\" >\n                <Button type=\"primary\" style={{marginRight: '10px'}} onClick={this.review} loading={modalTuttonLoading} >复盘</Button>\n                <Button type=\"primary\" onClick={this.export} loading={buttonLoading} >导出</Button>\n              </Row>\n            </Col>\n          </Row>\n        </div>\n        <div className='table-group' style={{marginTop: '15px'}}>\n          <Table\n            rowKey={record => record.id}\n            loading={modalTableLoading}\n            columns={this.columns1}\n            dataSource={modalSearchResult}\n            scroll={{x: 'max-content', y: 400}}\n            onChange={this.onChange}\n            pagination={pagination}\n            rowSelection={rowSelection}\n          />\n        </div>\n        {/* 记录弹窗内容 */}\n        <div>\n            <Modal\n              title = \"盘点记录\"\n              visible={this.state.visible}\n              onCancel={this.handleCancel}\n              footer={null}\n              mask={false}\n              width={1024}\n            >\n              <div className='table-group' style={{marginTop: '15px'}}>\n                <Table\n                  rowKey={(record, index) => index}\n                  loading={recordTableLoading}\n                  columns={this.columns2}\n                  dataSource={detailResult}\n                  scroll={{x: 'max-content', y: 400}}\n                  pagination={false}\n                />\n              </div>\n            </Modal>\n        </div>\n      </div>\n    )\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src_admin/page/inventoryPlan/components/FullModal.js","module.exports = (__webpack_require__(1))(111);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/antd/lib/checkbox/index.js from dll-reference bundle_1e684511172d5b2e005f\n// module id = 994\n// module chunks = 0 2 4 5 6 13 22 23 26 31 40 41 71"],"sourceRoot":""}